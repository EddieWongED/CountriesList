{"version":3,"sources":["Component/NavBar.js"],"names":["languages","require","DropdownOptions","props","context","React","useContext","ThemeContext","Object","keys","map","key","countryCode","countryName","id","theme","className","onClick","i18next","changeLanguage","NavBarOptions","handleThemeClick","navBarShown","list","t","useTranslation","ref","toString","href","class","type","defaultChecked","language","NavBar","useState","setNavBarShown","sideBar","useRef","logoImg","logoName","menu","logoContent","e","prevState","current","style","width","opacity","height","display"],"mappings":"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","file":"static/js/4.29f8581b.chunk.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport '../index.css'\r\nimport '../style/switch.css'\r\nimport '../style/navBar.css'\r\nimport '../style/dropdownMenu.css'\r\nimport 'flag-icon-css/css/flag-icon.min.css'\r\nimport {ThemeContext} from '../Theme';\r\nimport i18next from 'i18next'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nlet languages = require(\"../i18n/languages.json\")\r\n\r\nconst DropdownOptions = (props) => {\r\n    const context = React.useContext(ThemeContext);\r\n    return Object.keys(languages).map((key) => {\r\n        const {countryCode, countryName} = languages[key];\r\n        return ( \r\n            <a id={key} theme={context} className=\"language-a\" onClick={() => {i18next.changeLanguage(key)}}>\r\n                <span className={`flag-icon flag-icon-${countryCode} language-flag-span`}></span>\r\n                <div className=\"language-option-div\">\r\n                    {countryName} ({key})\r\n                </div>\r\n            </a>   \r\n        )\r\n    })\r\n}\r\n\r\nconst NavBarOptions = (props) => {\r\n    const {handleThemeClick, navBarShown, list} = props;\r\n    const context = React.useContext(ThemeContext);\r\n\r\n    const {t} = useTranslation();\r\n\r\n    return (\r\n    <ul ref={list} className=\"nav-list\" theme={context} navBarShown={navBarShown.toString()}>\r\n        <li theme={context}>\r\n            <a className=\"sidebar-option-a\" href=\"https://github.com/EddieWongED/CountriesList\" theme={context} navBarShown={navBarShown.toString()}>\r\n                <div className=\"nav-option-div\">\r\n                    <img className=\"github_img\" theme={context}/>\r\n                    <span className=\"links_name\">{t(\"sourceCode\")}</span>\r\n                </div>\r\n            </a>\r\n            {/* <span class=\"tooltip\">Source Code</span> */}\r\n        </li>\r\n        <li theme={context}>\r\n            <a className=\"sidebar-option-a\" theme={context} navBarShown={navBarShown.toString()}>\r\n                <div className=\"nav-option-div\">\r\n                    <img className=\"theme-img\" theme={context}/>\r\n                    <span className=\"links_name\">{t(\"darkMode\")}</span>\r\n                </div>\r\n                <label class=\"switch\">\r\n                    <input type=\"checkbox\" defaultChecked={context === \"dark\"} onClick={handleThemeClick} />\r\n                    <span class=\"slider round\"></span>\r\n                </label>\r\n            </a>\r\n            {/* <span class=\"tooltip\">Source Code</span> */}\r\n        </li>\r\n        <li theme={context}>\r\n            <a className=\"sidebar-option-a\" theme={context} navBarShown={navBarShown.toString()}>\r\n                <div className=\"nav-option-div\">\r\n                    <img  className=\"lang-img\" theme={context}/>\r\n                    <span className=\"links_name\">{t(\"language\")}</span>\r\n                </div>     \r\n                <div class=\"dropdown-div\">\r\n                    <div className=\"dropdown-btn-div\">\r\n                        <button className=\"dropdown-btn\" theme={context}>{i18next.language}</button>\r\n                        <div className=\"test\"/>\r\n                    </div>\r\n                    <div className=\"dropdown-content-div\" theme={context}>\r\n                        <DropdownOptions/>\r\n                    </div>\r\n                </div>\r\n            </a>\r\n            {/* <span class=\"tooltip\">Source Code</span> */}\r\n        </li>\r\n    </ul>\r\n    )\r\n}\r\nconst NavBar = (props) => {\r\n    const context = React.useContext(ThemeContext);\r\n    const [navBarShown, setNavBarShown] = React.useState(true);\r\n    const sideBar = React.useRef(null);\r\n    const list = React.useRef(null);\r\n    const logoImg = React.useRef(null);\r\n    const logoName = React.useRef(null);\r\n    const menu = React.useRef(null);\r\n    const logoContent = React.useRef(null);\r\n    const {t} = useTranslation();\r\n\r\n    function toggleMenu(e) {\r\n        \r\n        setNavBarShown((prevState) => {\r\n            if (prevState === true) {\r\n                sideBar.current.style.width = \"300px\";\r\n                \r\n                list.current.style.opacity = \"1\";\r\n                list.current.style.height = \"auto\";\r\n                logoImg.current.style.display = \"flex\"\r\n                logoName.current.style.display = \"flex\"\r\n                // list.current.style.display = \"block\"\r\n            } else {\r\n                sideBar.current.style.width = \"90px\";\r\n                list.current.style.opacity = \"0\";\r\n                list.current.style.height = \"0\";\r\n                logoImg.current.style.display = \"none\"\r\n                logoName.current.style.display = \"none\"\r\n                // list.current.style.display = \"none\"\r\n            }\r\n            return !prevState\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div ref={sideBar} className=\"sidebar-div\" theme={context}>\r\n            <div ref={logoContent} className=\"logo-content-div\">\r\n                <div ref={logoImg} className=\"logo-img-div\">\r\n                    <img className=\"logo-img\" theme={context}/>\r\n                </div>\r\n                <div ref={logoName} className=\"logo-name-div\">Flaggy</div>\r\n                <div ref={menu} className=\"menu-img-div\" onClick={toggleMenu}>\r\n                    <img className=\"menu-img\"theme={context}/>\r\n                </div>\r\n            </div>\r\n            <NavBarOptions navBarShown={navBarShown} list={list} handleThemeClick={props.handleThemeClick}/>\r\n            <div className=\"profile-div\">\r\n                <div className=\"profile-content-div\">\r\n                    <div className=\"profile-name\">\r\n                        Eddie Wong\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar"],"sourceRoot":""}